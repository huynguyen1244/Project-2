import { useState } from "react";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { RadioGroup, RadioGroupItem } from "@/components/ui/radio-group";
import { Label } from "@/components/ui/label";
import { Languages } from "lucide-react";

const languages = [
  { id: "en", name: "Ti·∫øng Anh", flag: "üá∫üá∏" },
  { id: "es", name: "Ti·∫øng T√¢y Ban Nha", flag: "üá™üá∏" },
  { id: "fr", name: "Ti·∫øng Ph√°p", flag: "üá´üá∑" },
  { id: "de", name: "Ti·∫øng ƒê·ª©c", flag: "üá©üá™" },
  { id: "it", name: "Ti·∫øng √ù", flag: "üáÆüáπ" },
  { id: "pt", name: "Ti·∫øng B·ªì ƒê√†o Nha", flag: "üáµüáπ" },
  { id: "ru", name: "Ti·∫øng Nga", flag: "üá∑üá∫" },
  { id: "zh", name: "Ti·∫øng Trung Qu·ªëc", flag: "üá®üá≥" },
  { id: "ja", name: "Ti·∫øng Nh·∫≠t", flag: "üáØüáµ" },
  { id: "ko", name: "Ti·∫øng H√†n", flag: "üá∞üá∑" },
  { id: "ar", name: "Ti·∫øng ·∫¢ R·∫≠p", flag: "üá∏üá¶" },
  { id: "hi", name: "Ti·∫øng Hindi", flag: "üáÆüá≥" },
  { id: "vi", name: "Ti·∫øng Vi·ªát", flag: "üáªüá≥" },
];

const LanguageSettingsPage = () => {
  const [selectedLanguage, setSelectedLanguage] = useState("en");

  const handleLanguageChange = (value: string) => {
    setSelectedLanguage(value);
    // Here you would implement actual language change logic
    localStorage.setItem("language", value);
  };
  const handleApplySettings = () => {
    // Here you would apply the language settings and potentially reload the app
    alert(
      `ƒê√£ thay ƒë·ªïi ng√¥n ng·ªØ th√†nh ${
        languages.find((l) => l.id === selectedLanguage)?.name
      }`
    );
  };

  return (
    <div className="space-y-6">
      <div className="flex items-center space-x-2">
        <Languages className="h-6 w-6 text-primary" />
        <h1 className="text-2xl font-bold">C√†i ƒê·∫∑t Ng√¥n Ng·ªØ</h1>
      </div>

      <Card>
        <CardHeader>
          <CardTitle>Ch·ªçn Ng√¥n Ng·ªØ ∆Øa Th√≠ch</CardTitle>
        </CardHeader>
        <CardContent>
          <RadioGroup
            value={selectedLanguage}
            onValueChange={handleLanguageChange}
            className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4"
          >
            {languages.map((language) => (
              <div key={language.id} className="flex items-center space-x-2">
                <RadioGroupItem
                  value={language.id}
                  id={`language-${language.id}`}
                />
                <Label
                  htmlFor={`language-${language.id}`}
                  className="flex items-center"
                >
                  <span className="mr-2 text-xl">{language.flag}</span>
                  {language.name}
                </Label>
              </div>
            ))}
          </RadioGroup>

          <div className="mt-6">
            <Button onClick={handleApplySettings}>
              √Åp D·ª•ng C√†i ƒê·∫∑t Ng√¥n Ng·ªØ
            </Button>
          </div>
        </CardContent>
      </Card>

      <Card>
        <CardHeader>
          <CardTitle>C√†i ƒê·∫∑t Khu V·ª±c</CardTitle>
        </CardHeader>
        <CardContent>
          <p className="text-muted-foreground mb-4">
            T√πy ch·ªânh ƒë·ªãnh d·∫°ng ng√†y th√°ng, ƒë·ªãnh d·∫°ng s·ªë v√† c√°c t√πy ch·ªçn khu v·ª±c
            kh√°c.
          </p>
          <div className="space-y-4">
            <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
              <div>
                <Label htmlFor="date-format">ƒê·ªãnh D·∫°ng Ng√†y</Label>
                <select
                  id="date-format"
                  className="w-full p-2 border rounded-md mt-1"
                  defaultValue="mm/dd/yyyy"
                >
                  <option value="mm/dd/yyyy">MM/DD/YYYY</option>
                  <option value="dd/mm/yyyy">DD/MM/YYYY</option>
                  <option value="yyyy/mm/dd">YYYY/MM/DD</option>
                  <option value="yyyy-mm-dd">YYYY-MM-DD</option>
                </select>
              </div>
              <div>
                <Label htmlFor="time-format">ƒê·ªãnh D·∫°ng Gi·ªù</Label>
                <select
                  id="time-format"
                  className="w-full p-2 border rounded-md mt-1"
                  defaultValue="12h"
                >
                  <option value="12h">12 gi·ªù (AM/PM)</option>
                  <option value="24h">24 gi·ªù</option>
                </select>
              </div>
            </div>
            <div>
              <Label htmlFor="timezone">M√∫i Gi·ªù</Label>
              <select
                id="timezone"
                className="w-full p-2 border rounded-md mt-1"
                defaultValue="auto"
              >
                <option value="auto">T·ª± ƒë·ªông (D·ª±a tr√™n tr√¨nh duy·ªát)</option>
                <option value="utc">UTC (Gi·ªù ph·ªëi h·ª£p th·∫ø gi·ªõi)</option>
                <option value="est">EST (Gi·ªù mi·ªÅn ƒê√¥ng)</option>
                <option value="pst">PST (Gi·ªù Th√°i B√¨nh D∆∞∆°ng)</option>
                <option value="gmt+7">GMT+7 (Gi·ªù Vi·ªát Nam)</option>
              </select>
            </div>
            <div className="flex justify-end">
              <Button>L∆∞u C√†i ƒê·∫∑t</Button>
            </div>
          </div>
        </CardContent>
      </Card>
    </div>
  );
};

export default LanguageSettingsPage;
